{"componentChunkName":"component---src-templates-post-jsx","path":"/22_11_09/","result":{"data":{"site":{"siteMetadata":{"title":"mitoconcrete"}},"markdownRemark":{"id":"78126d6d-cf07-5526-a5e3-87239126f815","excerpt":"Python 배열 배열은 본래 메모리의 특정부분을 미리 할당받아 사용한다. 하지만, 파이썬의 배열은 길이가 자유롭게 변화한다. 이유는 파이썬는 내부적으로 동적배열을 사용하며, O(1)의 속도가 보장되도록 내부 로직이 구현되어 있기 떄문이다. Python for...else for...else 문의 else는 break, continue등을 거치지 않고, …","html":"<h2>[Python] 배열</h2>\n<ul>\n<li>배열은 본래 메모리의 특정부분을 미리 할당받아 사용한다.</li>\n<li>하지만, 파이썬의 배열은 길이가 자유롭게 변화한다.</li>\n<li>이유는 파이썬는 내부적으로 동적배열을 사용하며, O(1)의 속도가 보장되도록 내부 로직이 구현되어 있기 떄문이다.</li>\n</ul>\n<h2>[Python] for...else</h2>\n<ul>\n<li>for...else 문의 else는 <strong>break, continue등을 거치지 않고, 완벽하게 반복문이 종료되었을 때</strong>의 처리를 위해 사용된다.</li>\n<li>다음은 input으로 입력된 배열에서 최댓값을 찾는 알고리즘이다.</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">find_max_num</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 이 부분을 채워보세요!</span>\n  <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'curr target num is : '</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> compare_num <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'num </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>num<span class=\"token punctuation\">}</span></span><span class=\"token string\"> compare with </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>compare_num<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">if</span> num <span class=\"token operator\">&lt;</span> compare_num<span class=\"token punctuation\">:</span>\n              <span class=\"token keyword\">break</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> num</code></pre></div>\n</li>\n<li>처음에 봤을 땐 하나도 이해가 되지 않았지만, <code class=\"language-text\">[3, 5, 6, 1, 2, 4]</code>의 input을 주고, 로그를 찍으니 아래와 같이 표현되었다.</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curr target num is :  3\nnum 3 compare with 3\nnum 3 compare with 5\ncurr target num is :  5\nnum 5 compare with 3\nnum 5 compare with 5\nnum 5 compare with 6\ncurr target num is :  6\nnum 6 compare with 3\nnum 6 compare with 5\nnum 6 compare with 6\nnum 6 compare with 1\nnum 6 compare with 2\nnum 6 compare with 4</code></pre></div>\n</li>\n<li>즉, 6번의 모든 숫자를 순회해야, else로 넘어갈 수 있는 것이다. 반복문을 모두 순회하기 위해선, <code class=\"language-text\">num &lt; compare_num</code> 이 조건을 피해야하는데, 그러기 위해선 <code class=\"language-text\">num</code>이 가장 큰 숫자여야 하는 것이다.</li>\n<li>잘 사용하진 않을 것 같지만,, 신기해서 기록한다.</li>\n</ul>\n<h2>[알고리즘] 소수정렬(아리스토테네스의 체)</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">find_prime_list_under_number</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prime_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> prime_list<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            prime_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> prime_list</code></pre></div>\n<h2>[알고리즘] 주어진 문자열을 모두 0 혹은 모두 1로 같게 만드는 최소 횟수를 반환하시오.</h2>\n<ol>\n<li>\n<p>모든 숫자를 1로 변환하고자 할 때</p>\n<ul>\n<li>1 -> 0 으로 바뀌는 포인트를 카운팅한다</li>\n</ul>\n</li>\n<li>\n<p>모든 숫자를 0으로 변환하고자 할 때</p>\n<ul>\n<li>0 -> 1 로 바뀌는 포인트를 카운팅한다.</li>\n</ul>\n</li>\n<li>\n<p>풀이</p>\n<ul>\n<li>위의 1,2 에 해당되는 카운팅과 피벗체크포인트를 두고, 각 조건에 따라 변화를 주어 카운팅한다.</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">find_count_to_turn_out_to_all_zero_or_all_one</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n zero_to_one_cnt<span class=\"token punctuation\">,</span> one_to_zero_cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n is_zero_to_one_convert_mode_active<span class=\"token punctuation\">,</span> is_one_to_zero_convert_mode_active <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span>\n <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">:</span>\n         is_zero_to_one_convert_mode_active <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n     <span class=\"token keyword\">elif</span> n <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n         is_one_to_zero_convert_mode_active <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n     <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> is_one_to_zero_convert_mode_active<span class=\"token punctuation\">:</span>\n         is_one_to_zero_convert_mode_active <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n         one_to_zero_cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n     <span class=\"token keyword\">elif</span> n <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> is_zero_to_one_convert_mode_active<span class=\"token punctuation\">:</span>\n         is_zero_to_one_convert_mode_active <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n         zero_to_one_cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n <span class=\"token keyword\">return</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>zero_to_one_cnt<span class=\"token punctuation\">,</span> one_to_zero_cnt<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ol>\n<h2>[알고리즘] 버블정렬</h2>\n<ul>\n<li>앞에서 부터 두개씩 비교하여, 매 사이클마다 가장 큰 수가 맨 뒤로 가도록 만드는 정렬기법</li>\n<li>시간복잡도 : <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">bubble_sort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n              array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">return</span> array</code></pre></div>\n<h2>[알고리즘] 선택정렬</h2>\n<ul>\n<li>사이클에서 가장 작은수를 매 사이클마다 바뀌는 리스트의 가장 앞에 위치시키는 정렬 기법</li>\n<li>시간복잡도 : <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">selection_sort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        min_val_idx <span class=\"token operator\">=</span> i\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># print(f'min val : {array[min_val_idx]}')</span>\n            <span class=\"token comment\"># print(f'compare val : {array[j]}')</span>\n            <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>min_val_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                min_val_idx <span class=\"token operator\">=</span> j\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">!=</span> min_val_idx<span class=\"token punctuation\">:</span>\n            array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>min_val_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>min_val_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span></code></pre></div>\n<h2>[알고리즘] 삽입정렬</h2>\n<ul>\n<li>매 사이클의 마지막 인자를 매 사이클마다 바뀌는 리스트의 최적에 위치에 놓는 정렬기법</li>\n<li>시간복잡도 : <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>버블 정렬과 선택 정렬은 최선이든 최악이든 항~~상 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 만큼의 시간이 걸렸지만, 최선의 경우에는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Ω(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">Ω</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> 만큼의 시간 복잡도가 걸림</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">insertion_sort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">return</span></code></pre></div>\n<h2>공부해 볼 것</h2>\n<ul>\n<li>JIT 컴파일러 구조 및 동작원리</li>\n<li>Python 컴파일러 별 속도</li>\n</ul>\n<h2>[회고] 221109</h2>\n<p>매번 느끼는 거지만, 알고리즘문제는 풀기전에는 그렇게 풀기싫은데 막상 문제에 접하게 되면 몰두하게 된다.\n내배캠에 참여하게 되면서, 받은 책이 있다. 그 책에 한 글귀가 내가 왜 개발자라는 직군을 선택했는지, 명확하게 정리해주었다.</p>\n<blockquote>\n<p>코딩이 즐거운 이유는 몰입을 유도해낼 조건을 모두 가지고 있기 때문이다.\n몰입을 유도해내는 조건은 계속해서 도전과제가 주어지고, 그 도전과제를 해결하는 것을 통해 성장하는 것이다.</p>\n</blockquote>\n<p>내가 개발자로서 처음 길을 택했던 계기는, 2017년 4월에 <strong>별찍기</strong>문제를 거의 한 1주일 동안 고민해서 해냈던 경험 이후 였다.<br>\n그 일주일 간 몰입했던 경험과 몰입을 통해 원하는 결과를 얻어냈던 순간이 정말 좋았던 기억이 있다.</p>\n<p><img src=\"/image/221109_01.jpg\" alt=\"개발자가 되기로 마음먹은날\"></p>\n<p>하지만, 그 이후로 계속 왜인지 모르게 알고리즘은 자신도 없고, 뭔가 내 영역이 아니란 느낌을 받아서 의식적으로 밀어내었다.</p>\n<p>개발자라는 직업은 계속 새로운 환경에 노출되어야 성장하는 것 같다. 나도 의도적으로 알고리즘문제를 접해도 '풀수 있다는 마인드'를 가지고 임해봐야겠다.</p>\n<p>오늘은 강의 진도를 무진장 뺏는데, 다른팀원들을 보니 스케쥴대로 따라가는 것 같았다. 심지어 어떤 팀원 분은 아예 프로그래밍이 처음이라 강의를 따라가는 것이 버거워 책을 사서 개인공부를 하신다고 하신다.\n내배캠이전 내가 다른부트캠프에서 공부를 하던 시절이 떠올랐다. 모든 게 다 중요한 것만 같아서, 매번 암기하고 정리하고 외우고 하느라 진도가 잘 빠지지 않았다. 그리고, 아티클 같은 것들을 막 첨부되어있는데, 불친절하게 '이거 읽어보면 좋다'라는 뉘앙스로 전달되었다. 너무 많은 정보가 쏟아지니 항상 머리가 터질 것만 같았다. 지금와서 생각해보면 그 때는 어떤게 중요하고 중요하지 않은 건지 필터링 할 수 있는 기준과 집중해야하는 범위가 명확하지 않아서 너무 힘들었다.</p>\n<p>어려움을 겪으시는 팀원들의 모습을 보니, 예전에 힘들어했던 경험이 오버랩되었다. 또한, 뮨재해결에 조금이나마 익숙해진 내 모습을 보면서, 꽤나 내가 개발직군이 익숙해졌구나~ 싶어 감개무량했다.\n지난주에도 그랬던 것 처럼, 어려움을 겪는 팀원들에게 올바른 방향을 잡아주고, 나 또한 적극적으로 도움을 받으며 공부기간을 보내보려고 한다.</p>\n<p>또한, 지속적으로 내 자신감이 초기와 같지 않다는 것이 느껴지고 있는데, 의도적으로 자신감을 유지하려고 해야겠다. 자신감이 없어지면 의견을 내는것에 소극적이게 된다..!!\n내 자신감을 저하시키는 요소들은 의도적으로 무시하려고 하자.</p>\n<h2>[다짐]</h2>\n<ul>\n<li>의도적으로 자신감 다시 높이기</li>\n<li>새로운 문제에 노출 되는 것을 두려워하지 않기</li>\n<li>내 의견을 적극적으로 표출하기</li>\n<li>상대방의 말을 경청하기</li>\n<li>이해할 수 있는 단어를 선택하여 설명하기</li>\n</ul>","frontmatter":{"title":"✏️ 2022-11-09 Today I Learn","date":"November 09, 2022","update":"November 09, 2022","tags":["Python","알고리즘","TIL","내일배움캠프","스파르타코딩캠프"],"series":"내일배움캠프"},"fields":{"slug":"/22_11_09/","readingTime":{"minutes":9.885}}},"seriesList":{"edges":[{"node":{"id":"bff90a25-d0a7-5c7f-a6fb-bf15787a70dc","fields":{"slug":"/22_10_31/"},"frontmatter":{"title":"✏️ 2022-10-31 Today I Learn"}}},{"node":{"id":"68eb6c50-88e2-5afe-9bc0-7e1673e0ea6d","fields":{"slug":"/22_11_01/"},"frontmatter":{"title":"✏️ 2022-11-01 Today I Learn"}}},{"node":{"id":"6b664f20-f21b-5678-84b3-3959827dc922","fields":{"slug":"/22_11_02/"},"frontmatter":{"title":"✏️ 2022-11-02 Today I Learn"}}},{"node":{"id":"2af6e2bd-2fff-52cb-80cc-ffab51e8f899","fields":{"slug":"/22_11_03/"},"frontmatter":{"title":"✏️ 2022-11-03 Today I Learn"}}},{"node":{"id":"2beec6d7-e058-5f0d-ae30-d2012c7d16ea","fields":{"slug":"/22_11_04/"},"frontmatter":{"title":"✏️ 2022-11-04 Today I Learn"}}},{"node":{"id":"9fa2d0ab-5bb6-5e0e-8499-e69a7839c45f","fields":{"slug":"/22_11_1st/"},"frontmatter":{"title":"✏️ 2022-11-1st Weekly I Learn"}}},{"node":{"id":"f527c43e-29f4-5073-8ad4-ab7da0f3977f","fields":{"slug":"/22_11_07/"},"frontmatter":{"title":"✏️ 2022-11-07 Today I Learn"}}},{"node":{"id":"2cbe19b7-ed66-54b7-9a88-0fcc3cf6c153","fields":{"slug":"/22_11_08/"},"frontmatter":{"title":"✏️ 2022-11-08 Today I Learn"}}},{"node":{"id":"78126d6d-cf07-5526-a5e3-87239126f815","fields":{"slug":"/22_11_09/"},"frontmatter":{"title":"✏️ 2022-11-09 Today I Learn"}}},{"node":{"id":"692e8305-8db0-5580-a7f8-e43fefc02bd3","fields":{"slug":"/22_11_10/"},"frontmatter":{"title":"✏️ 2022-11-10 Today I Learn"}}},{"node":{"id":"514df56a-8dfc-5f59-8656-3c77a1e4327d","fields":{"slug":"/22_11_11/"},"frontmatter":{"title":"✏️ 2022-11-11 Today I Learn"}}},{"node":{"id":"dde9725a-6731-564e-8374-01317f8fb11f","fields":{"slug":"/22_11_2nd/"},"frontmatter":{"title":"✏️ 2022-11-2nd Weekly I Learn"}}},{"node":{"id":"97db2986-14ad-59dd-b32c-6b448d5a733e","fields":{"slug":"/22_11_14/"},"frontmatter":{"title":"✏️ 2022-11-14 Today I Learn"}}},{"node":{"id":"df8dd86e-3071-59c1-a092-288a3c90807e","fields":{"slug":"/22_11_15/"},"frontmatter":{"title":"✏️ 2022-11-15 Today I Learn"}}},{"node":{"id":"b02be35b-96ec-51b5-9ae2-23820778b8d8","fields":{"slug":"/22_11_16/"},"frontmatter":{"title":"✏️ 2022-11-16 Today I Learn"}}},{"node":{"id":"a2f18918-5486-599c-a969-ebe995817f9f","fields":{"slug":"/22_11_17/"},"frontmatter":{"title":"✏️ 2022-11-17 Today I Learn"}}},{"node":{"id":"c7d1adcc-ea6d-5273-ace8-c3d1819c89a9","fields":{"slug":"/22_11_18/"},"frontmatter":{"title":"✏️ 2022-11-18 Today I Learn"}}},{"node":{"id":"3222dd56-1dea-5052-81d7-7898798e0238","fields":{"slug":"/22_11_3rd/"},"frontmatter":{"title":"✏️ 2022-11-3rd Weekly I Learn"}}},{"node":{"id":"7617e852-4a75-5a03-8baf-fb255eb554f9","fields":{"slug":"/22_11_21/"},"frontmatter":{"title":"✏️ 2022-11-21 Today I Learn"}}},{"node":{"id":"9f104791-a2d7-50b6-80b5-e78bd5ec7678","fields":{"slug":"/22_11_22/"},"frontmatter":{"title":"✏️ 2022-11-22 Today I Learn"}}},{"node":{"id":"6205256b-a876-5a1e-94bf-9dc15065a965","fields":{"slug":"/22_11_23/"},"frontmatter":{"title":"✏️ 2022-11-23 Today I Learn"}}},{"node":{"id":"4db78a29-3441-5206-8002-6e7321bb7c99","fields":{"slug":"/22_11_24/"},"frontmatter":{"title":"✏️ 2022-11-24 Today I Learn"}}},{"node":{"id":"4adfbcd8-9d66-5c5d-ab31-71005a65cd14","fields":{"slug":"/22_11_25/"},"frontmatter":{"title":"✏️ 2022-11-25 Today I Learn"}}},{"node":{"id":"65a2f128-15ee-5853-a4c3-115eb93af8f2","fields":{"slug":"/22_11_4th/"},"frontmatter":{"title":"✏️ 2022-11-4th Weekly I Learn"}}},{"node":{"id":"6474759c-b861-5e6d-bcd3-1dc4d4fb6050","fields":{"slug":"/22_11_28/"},"frontmatter":{"title":"✏️ 2022-11-28 Today I Learn"}}},{"node":{"id":"a9471a01-6814-534f-8f42-7bb167e939f9","fields":{"slug":"/22_11_29/"},"frontmatter":{"title":"✏️ 2022-11-29 Today I Learn"}}},{"node":{"id":"55a96c56-95ce-5ddd-902f-74879ef03e7d","fields":{"slug":"/22_11_30/"},"frontmatter":{"title":"✏️ 2022-11-30 Today I Learn"}}},{"node":{"id":"e421a9be-d87d-507b-b2ec-653f9b0ab722","fields":{"slug":"/22_12_01/"},"frontmatter":{"title":"✏️ 2022-12-01 Today I Learn"}}},{"node":{"id":"004d92cd-c4ab-57f0-a1f2-29ddf364e409","fields":{"slug":"/22_12_02/"},"frontmatter":{"title":"✏️ 2022-12-02 Today I Learn"}}},{"node":{"id":"bcf2f7af-4ba3-59b7-83dd-d5376cf5aa36","fields":{"slug":"/22_12_1st/"},"frontmatter":{"title":"✏️ 2022-12-1th Weekly I Learn"}}},{"node":{"id":"d247bb1b-dcca-5f7a-951c-6c2a803db140","fields":{"slug":"/22_12_05/"},"frontmatter":{"title":"✏️ 2022-12-05 Today I Learn"}}},{"node":{"id":"776f9c88-4455-53f4-ae90-e7754918558a","fields":{"slug":"/22_12_06/"},"frontmatter":{"title":"✏️ 2022-12-06 Today I Learn"}}},{"node":{"id":"c6b17078-0525-5ec8-80ee-0b9fa2e0227d","fields":{"slug":"/22_12_07/"},"frontmatter":{"title":"✏️ 2022-12-07 Today I Learn"}}},{"node":{"id":"e7f37c40-c448-573d-80ee-a87e7f25485d","fields":{"slug":"/22_12_08/"},"frontmatter":{"title":"✏️ 2022-12-08 Today I Learn"}}},{"node":{"id":"29d073f0-0b07-5b80-9e0f-d5bfb9de98b5","fields":{"slug":"/22_12_09/"},"frontmatter":{"title":"✏️ 2022-12-09 Today I Learn"}}},{"node":{"id":"a8d8ef79-c35e-5a8b-a1c9-accfa950cbc9","fields":{"slug":"/22_12_2nd/"},"frontmatter":{"title":"✏️ 2022-12-2nd Weekly I Learn"}}},{"node":{"id":"4252e767-57a3-5105-a02f-7cfc836d0e6a","fields":{"slug":"/22_12_12/"},"frontmatter":{"title":"✏️ 2022-12-12 Today I Learn"}}},{"node":{"id":"aa13b33f-cfd2-5c84-9933-faa53b0c707b","fields":{"slug":"/22_12_13/"},"frontmatter":{"title":"✏️ 2022-12-13 Today I Learn"}}},{"node":{"id":"7d26c70f-0213-5152-91d8-c6e17ed0c77c","fields":{"slug":"/22_12_14/"},"frontmatter":{"title":"✏️ 2022-12-14 Today I Learn"}}},{"node":{"id":"0a14e2fa-df2b-5d4e-b49f-bc200ddf34e8","fields":{"slug":"/22_12_15/"},"frontmatter":{"title":"✏️ 2022-12-15 Today I Learn"}}},{"node":{"id":"497abc88-2ebb-5f02-8a15-7f8ec4bb19c3","fields":{"slug":"/22_12_16/"},"frontmatter":{"title":"✏️ 2022-12-16 Today I Learn"}}},{"node":{"id":"c3e1b3d6-bab1-5ccc-9cb9-e97c50ce04d8","fields":{"slug":"/22_12_3rd/"},"frontmatter":{"title":"✏️ 2022-12-3rd Weekly I Learn"}}},{"node":{"id":"8a7fcec3-5344-5298-8f9b-5d6f3fc601d0","fields":{"slug":"/22_12_19/"},"frontmatter":{"title":"✏️ 2022-12-19 Today I Learn"}}},{"node":{"id":"00e08244-1e45-57e7-8914-79729e10c2c2","fields":{"slug":"/22_12_20/"},"frontmatter":{"title":"✏️ 2022-12-20 Today I Learn"}}},{"node":{"id":"afff2d03-2396-5e52-89d5-6da63e7b29d3","fields":{"slug":"/22_12_21/"},"frontmatter":{"title":"✏️ 2022-12-21 Today I Learn"}}},{"node":{"id":"8b77f9b7-35a4-50d1-b220-efaeac19ecfe","fields":{"slug":"/22_12_22/"},"frontmatter":{"title":"✏️ 2022-12-22 Today I Learn"}}},{"node":{"id":"f924b607-0e05-5991-a601-36775ed1ad62","fields":{"slug":"/22_12_23/"},"frontmatter":{"title":"✏️ 2022-12-23 Today I Learn"}}},{"node":{"id":"fec859b1-91c9-5b74-9dbd-a0c0a65e299b","fields":{"slug":"/22_12_4th/"},"frontmatter":{"title":"✏️ 2022-12-4th Weekly I Learn"}}},{"node":{"id":"002d301b-53a2-5797-bda2-4197e25cf175","fields":{"slug":"/22_12_26/"},"frontmatter":{"title":"✏️ 2022-12-26 Today I Learn"}}},{"node":{"id":"4627467c-0323-5342-9723-7fe117c966e7","fields":{"slug":"/22_12_27/"},"frontmatter":{"title":"✏️ 2022-12-27 Today I Learn"}}}]},"previous":{"fields":{"slug":"/22_11_08/"},"frontmatter":{"title":"✏️ 2022-11-08 Today I Learn"}},"next":{"fields":{"slug":"/22_11_10/"},"frontmatter":{"title":"✏️ 2022-11-10 Today I Learn"}}},"pageContext":{"id":"78126d6d-cf07-5526-a5e3-87239126f815","series":"내일배움캠프","previousPostId":"2cbe19b7-ed66-54b7-9a88-0fcc3cf6c153","nextPostId":"692e8305-8db0-5580-a7f8-e43fefc02bd3"}},"staticQueryHashes":[]}