{"componentChunkName":"component---src-templates-post-jsx","path":"/22_11_10/","result":{"data":{"site":{"siteMetadata":{"title":"mitoconcrete"}},"markdownRemark":{"id":"692e8305-8db0-5580-a7f8-e43fefc02bd3","excerpt":"알고리즘 정렬 1-1. 병합정렬 인자가 쪼개지지 않을때까지 쪼갠뒤, 병합하면서 정렬하는 기법. 분할-정복(Divide-Conquer) 기법을 사용하는 대표적인 방법 중 하나. 분할의 시간복잡도는  병합의 시간복잡도는  따라서, 병합정렬은  의 시간복잡도를 가진다. 병합정렬의 과정 Python 파이썬 딕셔너리의 주소값 체이닝 파이썬 딕셔너리 주소참조 기능 …","html":"<h2>[알고리즘] 정렬</h2>\n<h3>1-1. 병합정렬</h3>\n<ul>\n<li>인자가 쪼개지지 않을때까지 쪼갠뒤, 병합하면서 정렬하는 기법.</li>\n<li>분할-정복(Divide-Conquer) 기법을 사용하는 대표적인 방법 중 하나.</li>\n<li>분할의 시간복잡도는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(logN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>병합의 시간복잡도는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>따라서, 병합정렬은 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(NlogN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> 의 시간복잡도를 가진다.</li>\n<li>병합정렬의 과정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2>[Python] 파이썬 딕셔너리의 주소값 체이닝</h2>\n<ul>\n<li>파이썬 딕셔너리 주소참조 기능 이용하여 enqueue 구현 중, 초기에 생성된 0x103148a30주소를 가진 next에 계속 tail로 오는 값들이 이어지는 것으로 보임.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'next'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>__main__<span class=\"token punctuation\">.</span>Node <span class=\"token builtin\">object</span> at <span class=\"token number\">0x103148a30</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>__main__<span class=\"token punctuation\">.</span>Node <span class=\"token builtin\">object</span> at <span class=\"token number\">0x103148a30</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'next'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>__main__<span class=\"token punctuation\">.</span>Node <span class=\"token builtin\">object</span> at <span class=\"token number\">0x103148a30</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>__main__<span class=\"token punctuation\">.</span>Node <span class=\"token builtin\">object</span> at <span class=\"token number\">0x1032e08b0</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'next'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>__main__<span class=\"token punctuation\">.</span>Node <span class=\"token builtin\">object</span> at <span class=\"token number\">0x103148a30</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>__main__<span class=\"token punctuation\">.</span>Node <span class=\"token builtin\">object</span> at <span class=\"token number\">0x1032eed60</span><span class=\"token operator\">></span></code></pre></div>\n<h2>[Python] 딕셔너리 내부 구현</h2>\n<ul>\n<li>파이썬 딕셔너리는 해시테이블과 비슷하게 동작한다.</li>\n<li>내부적으로 배열을 사용하며, Key값을 내장된 함수로 인덱스로 변환하여, 인덱스에 값을 저장하도록 구현되어 있다고 한다.</li>\n</ul>\n<h2>[알고리즘] 해시테이블에서 충돌을 해결하는 방법</h2>\n<ol>\n<li>링크드리스트나 튜플을 이용하여 옆으로 이어나가는 식으로 충돌을 해결한다.</li>\n<li>개방주소법(Open Addressing)을 이용하여, 배열의 남는 공간에 값을 저장한다.</li>\n</ol>\n<h2>[알고리즘] 해시테이블의 시간복잡도와 공간복잡도</h2>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>의 시간복잡도를 보장한다.</li>\n<li>많은 메모리를 차지하여, 공간복잡도 측면에서는 좋지 않다.</li>\n</ul>\n<h2>[알고리즘] 트리 관련 용어</h2>\n<ul>\n<li>sibling : 동일레벨의 노드</li>\n<li>이진트리 : 자식의 갯수가 최대 2개인 트리</li>\n<li>완전이진트리 : 자식의 갯수가 최대 2개이며, 노드의 삽입이 최하단 왼쪽부터 차례대로 채워지는 트리</li>\n</ul>\n<h2>[알고리즘] 완전이진트리를 배열로 표현하는법</h2>\n<p>인덱스로 부모와 자식의 관계를 표현하는것이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">     <span class=\"token number\">3</span>\n  <span class=\"token number\">4</span>    <span class=\"token number\">5</span>\n<span class=\"token number\">6</span>  <span class=\"token number\">7</span>  <span class=\"token number\">8</span>  <span class=\"token number\">9</span>    <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>위의 트리에서 아래의 규칙을 따른다.</p>\n<ol>\n<li>현재 인덱스 * 2 왼쪽자식의 인덱스</li>\n<li>현재 인덱스 * 2 + 1 오른쪽자식의 인덱스</li>\n<li>현재 인덱스 // 부모의 인덱스</li>\n</ol>\n<h2>[알고리즘] 완전이진트리의 높이</h2>\n<p>각 레벨 별 최대노드 갯수는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span>개이다. 이걸 이용하여, 현재 트리의 레벨을 구할 수 있다.\n높이가 h이고, 완전꽉찬이진트리에 대한 노드 수를 구하기 위한 식은 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>=</mo><msup><mn>2</mn><mo stretchy=\"false\">(</mo></msup><mi>h</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">N = 2^(h+1)-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9713299999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mopen mtight\">(</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 이다. 따라서, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">h = log(N+1) -1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 이기 때문에, 노드의 수에 상관없이, 트리의 높이는 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(logN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>의 높이를 가진다.</p>\n<h2>[알고리즘] 최대힙에서 노드의 삽입과 삭제</h2>\n<ol>\n<li>\n<p>노드의 삽입\n트리의 높이 만큼의 시간복잡도를 가진다. 최대힙은 완전이진트리에서 구현되므로, 완전이진트리의 높이인 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">logN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>만큼의 시간복잡도를 가진다.</p>\n<ul>\n<li>가장 마지막에 넣은 뒤, 부모와 값을 비교해주면서 올라가며 적절한 위치를 찾는다.</li>\n</ul>\n</li>\n<li>\n<p>노드의 삭제\n트리의 높이 만큼의 시간복잡도를 가진다. 최대힙은 완전이진트리에서 구현되므로, 완전이진트리의 높이인 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">logN</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>만큼의 시간복잡도를 가진다.</p>\n<ul>\n<li>가장 첫번째 인자를 삭제하고, 마지막인자를 첫번째로 옮긴 뒤, 해당 노드를 아래로 내리며 적절한 위치를 찾는다.</li>\n<li>매 단계에서 가장 중요한것은 왼쪽, 오른쪽, 자신 중에서 가장 큰 값을 찾는 것이다.</li>\n</ul>\n</li>\n</ol>\n<h2>[회고] 221110</h2>\n<p>오늘은 하루종일 인강듣고 알고리즘 문제풀고의 반복이었다. 문제를 하나씩 깨나가는 과정이 재미있게 다가왔다. 팀원 중 한 분이 함수의 <code class=\"language-text\">return</code>의 동작에 대해 혼란스러워 하며, 도움을 요청하였다. 팀원들 모두가 공부를 멈추고 도와드리기 시작했다. <code class=\"language-text\">print</code>으로 출력되는 것과 값이 <code class=\"language-text\">return</code>되는 것의 차이점부터 시작하여, 함수를 사용하는 이유까지 설명드렸다.</p>\n<p>나는 이 분이 겪는 어려움이 이해가 갔던게, 처음 c언어를 배울때 stadio 어쩌고 적혀있는 것 부터 시작해서, return 적혀있는 것 까지 하나하나 뭔뜻인지 알고싶어했고, 하지만 그 당시에는 그걸 어떻게 검색해야하는지 어떻게 동작하는지 알지못했다. 그 이후에도 <code class=\"language-text\">return</code>의 용도에 대해 긴가민가하다가, 이런 정의를 보았고, 그 이후로 이해가 확실히 빨라졌다.</p>\n<blockquote>\n<p>return을 만나는 순간, 함수는 중단되며, 해당 함수가 호출된 곳으로 이동한다. 반환된 값이 있다면, 호출된 곳에 반환된 값을 넣어준다.</p>\n</blockquote>\n<p>지금은 당연한 작동방식이지만, 그 때는 당연하지 않았다. 따라서, 이 팀원에게 이 문구를 알려드렸고, 그 이후로 \"아하\"하시며, 스스로 함수의 호출순서를 읊어가시며 이해하셨다는 시그널을 보내주셨다.\n다른 팀원들도 디버깅툴과 여러 레퍼런스를 전달드리며, 이해를 도왔다. '팀'이 개인이 겪는 어려움을 해결 한 것 이다. 다들 열과 성을 다해 설명을 해드렸기에, 그 분이 이해하시자마자 모두들 기뻐하는 반응을 보여주셨다.</p>\n<p>어떤 유튜브영상을 보다가, 수학강사 정승제님이 은퇴한 운동선수들에게 사칙연산을 가르치는 영상을 보았다. 정승제님은 중학교과정이상만 가르쳤기때문에, 사칙연산은 '당연히'이렇게 동작하는 것 이라고 생각하셨는데, 운동선수들은 이 '당연한'것에 대해 이해하지 못했다. 정승제님은 사칙연산을 가르치는 경험이 없었기에 처음에는 답답해도 하시고, 어떻게 강의를 시작하셔야 할지 갈피를 잡지 못하셨다.</p>\n<p>오늘 내 느낌이 그랬다. 과거에 어려움을 겪었던 경험이 있었지만, 어느순간 <code class=\"language-text\">return</code>은 나에게 있어 당연하게 동작하는 것이 되어버렸기에, 처음엔 어디부터 어떻게 설명드려야 할 지 갈피를 잡지 못했다. 당연히 '이걸 왜 이해를 못하지?'라는 답답함이 밀려왔으나, 과거의 경험이 떠오르고 나서는 '이해 못할 수 있지'의 포용적인 태도로 변했다.</p>\n<p>프로그래밍엔 '당연한 것'은 없다. 모두 0과 1의 조합으로 컴퓨터에 신호를 보내 동작하는 것이고, 내부의 동작은 우리눈으로 정확하게 확인 할 수 없다.</p>\n<p>그렇기에 더더욱 익숙한 것도 당연히 여기지 않으며, 탐구하는 자세가 필요하다. 오늘의 일을 계기로 조금 더 익숙해지는 것을 경계하여, 어떤 현상을 바라보는 시야가 좁아지지 않도록 노력해야겠다는 생각을 했다.</p>\n<h2>[다짐]</h2>\n<ul>\n<li>익숙해지는 것을 경계하기</li>\n<li>상대방의 의견에 온전히 동의하고 말 멈추기</li>\n<li>할말이 있어도 적절한 시기엔 참기</li>\n</ul>","frontmatter":{"title":"✏️ 2022-11-10 Today I Learn","date":"November 10, 2022","update":"November 10, 2022","tags":["Python","알고리즘","TIL","내일배움캠프","스파르타코딩캠프"],"series":"내일배움캠프"},"fields":{"slug":"/22_11_10/","readingTime":{"minutes":10.06}}},"seriesList":{"edges":[{"node":{"id":"bff90a25-d0a7-5c7f-a6fb-bf15787a70dc","fields":{"slug":"/22_10_31/"},"frontmatter":{"title":"✏️ 2022-10-31 Today I Learn"}}},{"node":{"id":"68eb6c50-88e2-5afe-9bc0-7e1673e0ea6d","fields":{"slug":"/22_11_01/"},"frontmatter":{"title":"✏️ 2022-11-01 Today I Learn"}}},{"node":{"id":"6b664f20-f21b-5678-84b3-3959827dc922","fields":{"slug":"/22_11_02/"},"frontmatter":{"title":"✏️ 2022-11-02 Today I Learn"}}},{"node":{"id":"2af6e2bd-2fff-52cb-80cc-ffab51e8f899","fields":{"slug":"/22_11_03/"},"frontmatter":{"title":"✏️ 2022-11-03 Today I Learn"}}},{"node":{"id":"2beec6d7-e058-5f0d-ae30-d2012c7d16ea","fields":{"slug":"/22_11_04/"},"frontmatter":{"title":"✏️ 2022-11-04 Today I Learn"}}},{"node":{"id":"9fa2d0ab-5bb6-5e0e-8499-e69a7839c45f","fields":{"slug":"/22_11_1st/"},"frontmatter":{"title":"✏️ 2022-11-1st Weekly I Learn"}}},{"node":{"id":"f527c43e-29f4-5073-8ad4-ab7da0f3977f","fields":{"slug":"/22_11_07/"},"frontmatter":{"title":"✏️ 2022-11-07 Today I Learn"}}},{"node":{"id":"2cbe19b7-ed66-54b7-9a88-0fcc3cf6c153","fields":{"slug":"/22_11_08/"},"frontmatter":{"title":"✏️ 2022-11-08 Today I Learn"}}},{"node":{"id":"78126d6d-cf07-5526-a5e3-87239126f815","fields":{"slug":"/22_11_09/"},"frontmatter":{"title":"✏️ 2022-11-09 Today I Learn"}}},{"node":{"id":"692e8305-8db0-5580-a7f8-e43fefc02bd3","fields":{"slug":"/22_11_10/"},"frontmatter":{"title":"✏️ 2022-11-10 Today I Learn"}}},{"node":{"id":"514df56a-8dfc-5f59-8656-3c77a1e4327d","fields":{"slug":"/22_11_11/"},"frontmatter":{"title":"✏️ 2022-11-11 Today I Learn"}}},{"node":{"id":"dde9725a-6731-564e-8374-01317f8fb11f","fields":{"slug":"/22_11_2nd/"},"frontmatter":{"title":"✏️ 2022-11-2nd Weekly I Learn"}}},{"node":{"id":"97db2986-14ad-59dd-b32c-6b448d5a733e","fields":{"slug":"/22_11_14/"},"frontmatter":{"title":"✏️ 2022-11-14 Today I Learn"}}},{"node":{"id":"df8dd86e-3071-59c1-a092-288a3c90807e","fields":{"slug":"/22_11_15/"},"frontmatter":{"title":"✏️ 2022-11-15 Today I Learn"}}},{"node":{"id":"b02be35b-96ec-51b5-9ae2-23820778b8d8","fields":{"slug":"/22_11_16/"},"frontmatter":{"title":"✏️ 2022-11-16 Today I Learn"}}},{"node":{"id":"a2f18918-5486-599c-a969-ebe995817f9f","fields":{"slug":"/22_11_17/"},"frontmatter":{"title":"✏️ 2022-11-17 Today I Learn"}}},{"node":{"id":"c7d1adcc-ea6d-5273-ace8-c3d1819c89a9","fields":{"slug":"/22_11_18/"},"frontmatter":{"title":"✏️ 2022-11-18 Today I Learn"}}},{"node":{"id":"3222dd56-1dea-5052-81d7-7898798e0238","fields":{"slug":"/22_11_3rd/"},"frontmatter":{"title":"✏️ 2022-11-3rd Weekly I Learn"}}},{"node":{"id":"7617e852-4a75-5a03-8baf-fb255eb554f9","fields":{"slug":"/22_11_21/"},"frontmatter":{"title":"✏️ 2022-11-21 Today I Learn"}}},{"node":{"id":"9f104791-a2d7-50b6-80b5-e78bd5ec7678","fields":{"slug":"/22_11_22/"},"frontmatter":{"title":"✏️ 2022-11-22 Today I Learn"}}},{"node":{"id":"6205256b-a876-5a1e-94bf-9dc15065a965","fields":{"slug":"/22_11_23/"},"frontmatter":{"title":"✏️ 2022-11-23 Today I Learn"}}},{"node":{"id":"4db78a29-3441-5206-8002-6e7321bb7c99","fields":{"slug":"/22_11_24/"},"frontmatter":{"title":"✏️ 2022-11-24 Today I Learn"}}},{"node":{"id":"4adfbcd8-9d66-5c5d-ab31-71005a65cd14","fields":{"slug":"/22_11_25/"},"frontmatter":{"title":"✏️ 2022-11-25 Today I Learn"}}},{"node":{"id":"65a2f128-15ee-5853-a4c3-115eb93af8f2","fields":{"slug":"/22_11_4th/"},"frontmatter":{"title":"✏️ 2022-11-4th Weekly I Learn"}}},{"node":{"id":"6474759c-b861-5e6d-bcd3-1dc4d4fb6050","fields":{"slug":"/22_11_28/"},"frontmatter":{"title":"✏️ 2022-11-28 Today I Learn"}}},{"node":{"id":"a9471a01-6814-534f-8f42-7bb167e939f9","fields":{"slug":"/22_11_29/"},"frontmatter":{"title":"✏️ 2022-11-29 Today I Learn"}}},{"node":{"id":"55a96c56-95ce-5ddd-902f-74879ef03e7d","fields":{"slug":"/22_11_30/"},"frontmatter":{"title":"✏️ 2022-11-30 Today I Learn"}}},{"node":{"id":"e421a9be-d87d-507b-b2ec-653f9b0ab722","fields":{"slug":"/22_12_01/"},"frontmatter":{"title":"✏️ 2022-12-01 Today I Learn"}}},{"node":{"id":"004d92cd-c4ab-57f0-a1f2-29ddf364e409","fields":{"slug":"/22_12_02/"},"frontmatter":{"title":"✏️ 2022-12-02 Today I Learn"}}}]},"previous":{"fields":{"slug":"/22_11_09/"},"frontmatter":{"title":"✏️ 2022-11-09 Today I Learn"}},"next":{"fields":{"slug":"/22_11_11/"},"frontmatter":{"title":"✏️ 2022-11-11 Today I Learn"}}},"pageContext":{"id":"692e8305-8db0-5580-a7f8-e43fefc02bd3","series":"내일배움캠프","previousPostId":"78126d6d-cf07-5526-a5e3-87239126f815","nextPostId":"514df56a-8dfc-5f59-8656-3c77a1e4327d"}},"staticQueryHashes":[]}