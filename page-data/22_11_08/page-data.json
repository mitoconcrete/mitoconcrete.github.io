{"componentChunkName":"component---src-templates-post-jsx","path":"/22_11_08/","result":{"data":{"site":{"siteMetadata":{"title":"mitoconcrete"}},"markdownRemark":{"id":"2cbe19b7-ed66-54b7-9a88-0fcc3cf6c153","excerpt":"Java 1. JVM / JRE / JDK JDK, JRE, JVM 관계 1-1. JVM (Java Virtual Machine) 우리가 Java로 작성한 코드는 컴파일러를 통해 확장자를 가진 바이너리(=바이트) 코드로 바뀐다. 컴파일된 바이너리 코드는 운영체제(Mac,Window,IOS,Android)마다 다르게 인식한다. Java는 운영체제별 JVM을…","html":"<h2>[Java] 1. JVM / JRE / JDK</h2>\n<p><img src=\"/image/221108_01.png\" alt=\"JDK, JRE, JVM 관계\"></p>\n<h3>1-1. JVM (Java Virtual Machine)</h3>\n<ul>\n<li>우리가 Java로 작성한 코드는 컴파일러를 통해 <code class=\"language-text\">.class</code>확장자를 가진 바이너리(=바이트) 코드로 바뀐다.</li>\n<li>컴파일된 바이너리 코드는 운영체제(Mac,Window,IOS,Android)마다 다르게 인식한다.</li>\n<li>Java는 운영체제별 JVM을 제공하여, 컴파일된 코드가 운영체제에 상관없이 똑같은 동작을 낼 수 있도록 한다.</li>\n<li>즉, JVM은 컴파일 코드를 읽고/검증하고/실행하여 운영체제가 변해도 똑같은 동작을 할 수 있게 돕는다.</li>\n</ul>\n<h3>1-2. JRE (Java Runtime Environment)</h3>\n<ul>\n<li>말그대로, 자바 코드의 실행 시 필요한 도구들을 갖춘 <strong>환경</strong>이다.</li>\n<li>JVM + 자바 프로그램 실행에 필요한 라이브러리 파일(system.out, 등...)으로 구성되어있다.</li>\n</ul>\n<h3>1-3. JDK (Java Development Kit)</h3>\n<ul>\n<li>JRE + 개발을 위한 도구(컴파일러, 디버거, ...)</li>\n</ul>\n<h2>[Java] 2. 예외</h2>\n<p><img src=\"/image/221108_02.png\" alt=\"Throwable\"></p>\n<p>자바는 예외처리도 예외에 관한 클래스를 상속받아 구현한다.\n<code class=\"language-text\">Throwable</code>이라는 클래스가 있고, 그 하위자식들로 예외를 표현한다.</p>\n<h3>2-1. 예외 기본</h3>\n<ul>\n<li>Error : 컴퓨터나 JVM이 동작할 수 없는 크리티컬한 상황.</li>\n<li>\n<p>Exception : 그 외의 대부분 문제상황.</p>\n<ul>\n<li>RuntimeException : 프로그램 실행도중 발생 할 수 있는 상황에 사용됨.</li>\n<li>IOException : 파일을 읽고 쓰는 상황에서 발생 할 수 있는 상황에 사용됨.</li>\n</ul>\n</li>\n<li>catch 는 이어서 사용하여, 다양한 예외를 잡을 수 있다. 단, 더 작은 범위의 Exception 부터 사용하여야, 더 많은 예외를 잡는 것이 가능해진다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n    검증 코드\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>작은범위의 에러<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    예외 시 처리<span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>넓은범위의 에러<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    예외 시 처리<span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>2-2. try-with-resource</h3>\n<p>입출력을 사용 할 때, 파일을 열고 닫는 행위를 해야한다.\n이 때 의무적으로, close() 메소드를 호출하여 처리해야하는데, <code class=\"language-text\">try-with-resource</code> 방식을 사용하게 되면 try에 전달한 자원을 try실행이후 자동으로 close 해주면서, 효율적인 코드를 작성하는데 도움을 준다.<br>\n<code class=\"language-text\">try-with-resource</code> 방식은 closeable interface 를 implements 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">.1</span><span class=\"token punctuation\">.</span> 자원할당<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">.2</span><span class=\"token punctuation\">.</span> 코드실행\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">.3</span><span class=\"token punctuation\">.</span> 자원 자동해제\n<span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>2-3. 메소드에 예외처리를 전가하기</h1>\n<p><code class=\"language-text\">throws</code>키워드를 사용하여, 예외를 메소드 실행시점으로 전가 시킨다. 단, 해당 키워드를 통해서 정의한 메소드는 반드시, try-catch문을 이용하여 정의한 exception에 대한 예외처리를 반드시 해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> a<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception_1</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Exception_2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sdsada\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception_1</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception_2</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>[Java] 3. Collection</h2>\n<p>자료구조를 표현하고 사용하기 위한 클래스의 집합.</p>\n<h3>3-1. ArrayList vs HashSet</h3>\n<ul>\n<li>ArrayList는 순서가 보장됨, HashSet은 순서가 보장되지 않음.</li>\n</ul>\n<h3>3-2. ArrayDeque(Double-Ended Queue)</h3>\n<ul>\n<li>Stack과 Queue의 기능을 모두 포함하면서 성능이 더 좋다.</li>\n<li>하지만, Thread-Safe하지 않기에, 멀티쓰레드 환경에서는 문제가 있다.</li>\n<li>그래서 pop(), push(), peek() 등에 synchronized를 이용해 ArrayDeque을 구현하면 된다.</li>\n<li>ArrayDeque의 push는 addFirst와 동일하게 동작한다.</li>\n</ul>\n<h2>[Java] 4. Generics</h2>\n<p>Collection 클래스를 Generics를 통해 컴파일타임에 타입체크해줌으로서, 프로그램의 안정성을 증대시켜준다.</p>\n<h3>4-1. 사용예들</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">// Type</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">//Element</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">//Key</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">V</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">//Value</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">//Number</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">//Result</span></code></pre></div>\n<h2>[Java] 5. 람다와 스트림</h2>\n<h3>5-1. 람다</h3>\n<ul>\n<li>식별자 없이 실행 가능한 함수.</li>\n<li>코드가 간결해지지만, 익명함수기에 재사용성이 줄어든다는 단점이 있다.</li>\n<li>forEach, map, filter, ...</li>\n</ul>\n<h3>5-2. 스트림</h3>\n<ul>\n<li>데이터를 여러개 표현 할 수 있는 곳에는 흐름이 생기고, 그 흐름을 이용해서 조작을 하는 것이다.</li>\n<li>데이터가 삭제되고, 수정되고, 들어오고 하면서 데이터가 유동적으로 변하게 된다. 이를 흐름이라 칭하는 것 같다.</li>\n<li>java8에서 적용되었다.</li>\n<li>흐름내부에서만 변동되지, 흐름의 대상을 직접적으로 수정하지는 않는다.</li>\n<li>한번닫힌 흐름은 재사용이 불가하다.</li>\n<li><code class=\"language-text\">collect()</code> 를 이용하여 스트림과정에서 return된 결과를 모아준다. 매개변수를 통해 collection타입도 변경가능하다.</li>\n</ul>\n<h2>[CS] 6. API(Application Programing Interface)</h2>\n<p>데이터를 주고받는 형식에 대한 약속(규약-Interface)</p>\n<h2>[Python] 7. set</h2>\n<p>set은 집합을 만들기 위한 개념으로서 합/교/차집합을 구하는 것이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 교집합</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 합집합</span>\n<span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 차집합</span></code></pre></div>\n<p>set은 중복을 없애준다. 단, 순서를 보장하지 않는다.</p>\n<h2>[Python] 8. 다양한 매개변수를 받는방법</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token comment\"># (a,b,c,) 튜플형식으로 인자가 들어옴</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span> <span class=\"token comment\"># {\"a\":1,\"b\":2, ...} 와 같은 딕셔너리 형태로 인자가 들어옴</span></code></pre></div>\n<h2>[회고] 221108 : 왜 겁을 내는가</h2>\n<p>질문방에는 다양한 질문이 올라온다. 다양한 사람들이 다양한 답변을 한다. 컴퓨터전공 수강생들/개발을 좀 해본 수강생들/튜터님들/매니저님들..\n나는 다양한 답변이 올라오는 곳에서의 토론은 의식적으로 피한다. 왜그런지 곰곰하게 생각해보니 아래의 결론이 도출되었다.</p>\n<ol>\n<li>내 의견이 틀리는 것이 무서워서</li>\n<li>내 의견이 지적당하는게 두려워서</li>\n<li>토론에 휘말리기 싫어서</li>\n<li>내가 잘난척하는 느낌이 나는것이 싫어서</li>\n</ol>\n<p>너무나도 명확하게 내가 고쳐야 할 점들이 도출되었다. 내가 봐 온 위대한 개발자들은 군중앞에서 말하고, 의견을 나누고, 토론하는 것을 즐겼다.\n다만, 그게 틀릴지라도 틀린것에 반박할 수 있는 지식을 가지고 있었지만 말이다.\n어쨋던, 난 너무 내 틀에 갖혀있다는 생각을 했다. 토론이 이뤄질 때, 비전공자 팀원들이 모여있는 방에 숨어 저건 맞다 저건아니다 하는 시시비비를 가리는 모습을 보면서 앞으로 나서지 못하고 뒤에서 의견을 내는 내가 한심하게 느껴졌다.<br>\n이건 아니다.<br>\n이건 성장할 수 없는 태도다.<br>\n왜 겁을 내는가.<br>\n변해야한다.<br>\n내 틀에서 벗어나야한다.</p>\n<h2>[다짐] 221109</h2>\n<ul>\n<li>상대방의 의견을 경청하기 / 무시하지 않기</li>\n<li>적극적으로 질문하기</li>\n<li>적극적으로 토론하기</li>\n<li>적극적으로 잘난척하기(내가 토론을 할 수있는 것에 대해)</li>\n<li>지속적으로 의문을 갖고 어떤 문제에 대해 파고들기</li>\n</ul>","frontmatter":{"title":"✏️ 2022-11-08 Today I Learn","date":"November 08, 2022","update":"November 08, 2022","tags":["Java","Python","CS","TIL","내일배움캠프","스파르타코딩캠프"],"series":"내일배움캠프"},"fields":{"slug":"/22_11_08/","readingTime":{"minutes":8.905}}},"seriesList":{"edges":[{"node":{"id":"1d145774-0c36-5571-8c1c-90522f062fb7","fields":{"slug":"/23_01_1st/"},"frontmatter":{"title":"✏️ 2023-01-1st Weekly I Learn"}}},{"node":{"id":"ef9afd14-c7a3-50a0-a5ad-3156dfb5da05","fields":{"slug":"/23_01_2nd/"},"frontmatter":{"title":"✏️ 2023-01-2nd Weekly I Learn"}}},{"node":{"id":"bff90a25-d0a7-5c7f-a6fb-bf15787a70dc","fields":{"slug":"/22_10_31/"},"frontmatter":{"title":"✏️ 2022-10-31 Today I Learn"}}},{"node":{"id":"68eb6c50-88e2-5afe-9bc0-7e1673e0ea6d","fields":{"slug":"/22_11_01/"},"frontmatter":{"title":"✏️ 2022-11-01 Today I Learn"}}},{"node":{"id":"6b664f20-f21b-5678-84b3-3959827dc922","fields":{"slug":"/22_11_02/"},"frontmatter":{"title":"✏️ 2022-11-02 Today I Learn"}}},{"node":{"id":"2af6e2bd-2fff-52cb-80cc-ffab51e8f899","fields":{"slug":"/22_11_03/"},"frontmatter":{"title":"✏️ 2022-11-03 Today I Learn"}}},{"node":{"id":"2beec6d7-e058-5f0d-ae30-d2012c7d16ea","fields":{"slug":"/22_11_04/"},"frontmatter":{"title":"✏️ 2022-11-04 Today I Learn"}}},{"node":{"id":"9fa2d0ab-5bb6-5e0e-8499-e69a7839c45f","fields":{"slug":"/22_11_1st/"},"frontmatter":{"title":"✏️ 2022-11-1st Weekly I Learn"}}},{"node":{"id":"f527c43e-29f4-5073-8ad4-ab7da0f3977f","fields":{"slug":"/22_11_07/"},"frontmatter":{"title":"✏️ 2022-11-07 Today I Learn"}}},{"node":{"id":"2cbe19b7-ed66-54b7-9a88-0fcc3cf6c153","fields":{"slug":"/22_11_08/"},"frontmatter":{"title":"✏️ 2022-11-08 Today I Learn"}}},{"node":{"id":"78126d6d-cf07-5526-a5e3-87239126f815","fields":{"slug":"/22_11_09/"},"frontmatter":{"title":"✏️ 2022-11-09 Today I Learn"}}},{"node":{"id":"692e8305-8db0-5580-a7f8-e43fefc02bd3","fields":{"slug":"/22_11_10/"},"frontmatter":{"title":"✏️ 2022-11-10 Today I Learn"}}},{"node":{"id":"514df56a-8dfc-5f59-8656-3c77a1e4327d","fields":{"slug":"/22_11_11/"},"frontmatter":{"title":"✏️ 2022-11-11 Today I Learn"}}},{"node":{"id":"dde9725a-6731-564e-8374-01317f8fb11f","fields":{"slug":"/22_11_2nd/"},"frontmatter":{"title":"✏️ 2022-11-2nd Weekly I Learn"}}},{"node":{"id":"97db2986-14ad-59dd-b32c-6b448d5a733e","fields":{"slug":"/22_11_14/"},"frontmatter":{"title":"✏️ 2022-11-14 Today I Learn"}}},{"node":{"id":"df8dd86e-3071-59c1-a092-288a3c90807e","fields":{"slug":"/22_11_15/"},"frontmatter":{"title":"✏️ 2022-11-15 Today I Learn"}}},{"node":{"id":"b02be35b-96ec-51b5-9ae2-23820778b8d8","fields":{"slug":"/22_11_16/"},"frontmatter":{"title":"✏️ 2022-11-16 Today I Learn"}}},{"node":{"id":"a2f18918-5486-599c-a969-ebe995817f9f","fields":{"slug":"/22_11_17/"},"frontmatter":{"title":"✏️ 2022-11-17 Today I Learn"}}},{"node":{"id":"c7d1adcc-ea6d-5273-ace8-c3d1819c89a9","fields":{"slug":"/22_11_18/"},"frontmatter":{"title":"✏️ 2022-11-18 Today I Learn"}}},{"node":{"id":"3222dd56-1dea-5052-81d7-7898798e0238","fields":{"slug":"/22_11_3rd/"},"frontmatter":{"title":"✏️ 2022-11-3rd Weekly I Learn"}}},{"node":{"id":"7617e852-4a75-5a03-8baf-fb255eb554f9","fields":{"slug":"/22_11_21/"},"frontmatter":{"title":"✏️ 2022-11-21 Today I Learn"}}},{"node":{"id":"9f104791-a2d7-50b6-80b5-e78bd5ec7678","fields":{"slug":"/22_11_22/"},"frontmatter":{"title":"✏️ 2022-11-22 Today I Learn"}}},{"node":{"id":"6205256b-a876-5a1e-94bf-9dc15065a965","fields":{"slug":"/22_11_23/"},"frontmatter":{"title":"✏️ 2022-11-23 Today I Learn"}}},{"node":{"id":"4db78a29-3441-5206-8002-6e7321bb7c99","fields":{"slug":"/22_11_24/"},"frontmatter":{"title":"✏️ 2022-11-24 Today I Learn"}}},{"node":{"id":"4adfbcd8-9d66-5c5d-ab31-71005a65cd14","fields":{"slug":"/22_11_25/"},"frontmatter":{"title":"✏️ 2022-11-25 Today I Learn"}}},{"node":{"id":"65a2f128-15ee-5853-a4c3-115eb93af8f2","fields":{"slug":"/22_11_4th/"},"frontmatter":{"title":"✏️ 2022-11-4th Weekly I Learn"}}},{"node":{"id":"6474759c-b861-5e6d-bcd3-1dc4d4fb6050","fields":{"slug":"/22_11_28/"},"frontmatter":{"title":"✏️ 2022-11-28 Today I Learn"}}},{"node":{"id":"a9471a01-6814-534f-8f42-7bb167e939f9","fields":{"slug":"/22_11_29/"},"frontmatter":{"title":"✏️ 2022-11-29 Today I Learn"}}},{"node":{"id":"55a96c56-95ce-5ddd-902f-74879ef03e7d","fields":{"slug":"/22_11_30/"},"frontmatter":{"title":"✏️ 2022-11-30 Today I Learn"}}},{"node":{"id":"e421a9be-d87d-507b-b2ec-653f9b0ab722","fields":{"slug":"/22_12_01/"},"frontmatter":{"title":"✏️ 2022-12-01 Today I Learn"}}},{"node":{"id":"004d92cd-c4ab-57f0-a1f2-29ddf364e409","fields":{"slug":"/22_12_02/"},"frontmatter":{"title":"✏️ 2022-12-02 Today I Learn"}}},{"node":{"id":"bcf2f7af-4ba3-59b7-83dd-d5376cf5aa36","fields":{"slug":"/22_12_1st/"},"frontmatter":{"title":"✏️ 2022-12-1th Weekly I Learn"}}},{"node":{"id":"d247bb1b-dcca-5f7a-951c-6c2a803db140","fields":{"slug":"/22_12_05/"},"frontmatter":{"title":"✏️ 2022-12-05 Today I Learn"}}},{"node":{"id":"776f9c88-4455-53f4-ae90-e7754918558a","fields":{"slug":"/22_12_06/"},"frontmatter":{"title":"✏️ 2022-12-06 Today I Learn"}}},{"node":{"id":"c6b17078-0525-5ec8-80ee-0b9fa2e0227d","fields":{"slug":"/22_12_07/"},"frontmatter":{"title":"✏️ 2022-12-07 Today I Learn"}}},{"node":{"id":"e7f37c40-c448-573d-80ee-a87e7f25485d","fields":{"slug":"/22_12_08/"},"frontmatter":{"title":"✏️ 2022-12-08 Today I Learn"}}},{"node":{"id":"29d073f0-0b07-5b80-9e0f-d5bfb9de98b5","fields":{"slug":"/22_12_09/"},"frontmatter":{"title":"✏️ 2022-12-09 Today I Learn"}}},{"node":{"id":"a8d8ef79-c35e-5a8b-a1c9-accfa950cbc9","fields":{"slug":"/22_12_2nd/"},"frontmatter":{"title":"✏️ 2022-12-2nd Weekly I Learn"}}},{"node":{"id":"4252e767-57a3-5105-a02f-7cfc836d0e6a","fields":{"slug":"/22_12_12/"},"frontmatter":{"title":"✏️ 2022-12-12 Today I Learn"}}},{"node":{"id":"aa13b33f-cfd2-5c84-9933-faa53b0c707b","fields":{"slug":"/22_12_13/"},"frontmatter":{"title":"✏️ 2022-12-13 Today I Learn"}}},{"node":{"id":"7d26c70f-0213-5152-91d8-c6e17ed0c77c","fields":{"slug":"/22_12_14/"},"frontmatter":{"title":"✏️ 2022-12-14 Today I Learn"}}},{"node":{"id":"0a14e2fa-df2b-5d4e-b49f-bc200ddf34e8","fields":{"slug":"/22_12_15/"},"frontmatter":{"title":"✏️ 2022-12-15 Today I Learn"}}},{"node":{"id":"497abc88-2ebb-5f02-8a15-7f8ec4bb19c3","fields":{"slug":"/22_12_16/"},"frontmatter":{"title":"✏️ 2022-12-16 Today I Learn"}}},{"node":{"id":"c3e1b3d6-bab1-5ccc-9cb9-e97c50ce04d8","fields":{"slug":"/22_12_3rd/"},"frontmatter":{"title":"✏️ 2022-12-3rd Weekly I Learn"}}},{"node":{"id":"8a7fcec3-5344-5298-8f9b-5d6f3fc601d0","fields":{"slug":"/22_12_19/"},"frontmatter":{"title":"✏️ 2022-12-19 Today I Learn"}}},{"node":{"id":"00e08244-1e45-57e7-8914-79729e10c2c2","fields":{"slug":"/22_12_20/"},"frontmatter":{"title":"✏️ 2022-12-20 Today I Learn"}}},{"node":{"id":"afff2d03-2396-5e52-89d5-6da63e7b29d3","fields":{"slug":"/22_12_21/"},"frontmatter":{"title":"✏️ 2022-12-21 Today I Learn"}}},{"node":{"id":"8b77f9b7-35a4-50d1-b220-efaeac19ecfe","fields":{"slug":"/22_12_22/"},"frontmatter":{"title":"✏️ 2022-12-22 Today I Learn"}}},{"node":{"id":"f924b607-0e05-5991-a601-36775ed1ad62","fields":{"slug":"/22_12_23/"},"frontmatter":{"title":"✏️ 2022-12-23 Today I Learn"}}},{"node":{"id":"fec859b1-91c9-5b74-9dbd-a0c0a65e299b","fields":{"slug":"/22_12_4th/"},"frontmatter":{"title":"✏️ 2022-12-4th Weekly I Learn"}}},{"node":{"id":"002d301b-53a2-5797-bda2-4197e25cf175","fields":{"slug":"/22_12_26/"},"frontmatter":{"title":"✏️ 2022-12-26 Today I Learn"}}},{"node":{"id":"4627467c-0323-5342-9723-7fe117c966e7","fields":{"slug":"/22_12_27/"},"frontmatter":{"title":"✏️ 2022-12-27 Today I Learn"}}},{"node":{"id":"da9cc9b4-ba58-5a4d-a432-5604c400243d","fields":{"slug":"/22_12_28/"},"frontmatter":{"title":"✏️ 2022-12-28 Today I Learn"}}},{"node":{"id":"c45dbf3b-84b6-513a-b91f-00d3831a2feb","fields":{"slug":"/22_12_29/"},"frontmatter":{"title":"✏️ 2022-12-29 Today I Learn"}}},{"node":{"id":"54168b06-a8bd-5d1f-ab5f-b5b3e74cf3d1","fields":{"slug":"/22_12_30/"},"frontmatter":{"title":"✏️ 2022-12-30 Today I Learn"}}},{"node":{"id":"118b951d-d5b3-5135-8ba2-94fa9d3484b5","fields":{"slug":"/23_01_05/"},"frontmatter":{"title":"✏️ 2023-01-05 Today I Learn"}}},{"node":{"id":"66488e39-7ca9-5b46-a91c-8f717951fda4","fields":{"slug":"/23_01_06/"},"frontmatter":{"title":"✏️ 2023-01-06 Today I Learn"}}},{"node":{"id":"c2a5b7fd-9e81-586f-8aac-31062db57d43","fields":{"slug":"/23_01_09/"},"frontmatter":{"title":"✏️ 2023-01-09 Today I Learn"}}},{"node":{"id":"5bc8f300-01f8-5bfc-a015-a576fc6af6ec","fields":{"slug":"/23_01_10/"},"frontmatter":{"title":"✏️ 2023-01-10 Today I Learn"}}},{"node":{"id":"d3bec361-7313-529b-888a-74316cab9091","fields":{"slug":"/23_01_11/"},"frontmatter":{"title":"✏️ 2023-01-11 Today I Learn"}}},{"node":{"id":"e23da3fb-cda7-5969-9f84-1d19498b305a","fields":{"slug":"/23_01_12/"},"frontmatter":{"title":"✏️ 2023-01-12 Today I Learn"}}},{"node":{"id":"05f21b53-dcd6-5cef-81b5-76f8be97d93a","fields":{"slug":"/23_01_13/"},"frontmatter":{"title":"✏️ 2023-01-13 Today I Learn"}}}]},"previous":{"fields":{"slug":"/22_11_07/"},"frontmatter":{"title":"✏️ 2022-11-07 Today I Learn"}},"next":{"fields":{"slug":"/22_11_09/"},"frontmatter":{"title":"✏️ 2022-11-09 Today I Learn"}}},"pageContext":{"id":"2cbe19b7-ed66-54b7-9a88-0fcc3cf6c153","series":"내일배움캠프","previousPostId":"f527c43e-29f4-5073-8ad4-ab7da0f3977f","nextPostId":"78126d6d-cf07-5526-a5e3-87239126f815"}},"staticQueryHashes":[]}